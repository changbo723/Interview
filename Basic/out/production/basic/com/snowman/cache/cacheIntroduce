Redis介绍
Redis是一个key-value的nosql数据库，先存到内存中，会根据一定的策略持久化到磁盘，即使断电也不会丢失数据。
同时支持的数据类型也比较多

主要用途
做缓存数据库的数据和web集群的中央缓存存放。把经常查询很少修改的数据放入缓存

redis中的技术器是原子性的

redis保存对象的方式
1 JSON字符串
需要把对象转换为json字符串，当做字符串处理，直接使用set,get来设置
优点 设置和获取比较简单
缺点 没有提供专门的方法，需要把对象转换为json

字节
 需要做序列化，就是把对象序列化为字节保存

redis数据淘汰机制
在redis中，允许用户设置最大使用内存大小 server.maxmemory,内存大小有限，需要保存有效的数据

6种淘汰规则
1 volatile-lru 从设置过期时间的数据集中挑选最近最少使用的数据淘汰
2 volatile-ttl 从已设置过期时间的数据集中挑选将要过期的数据淘汰
3 volatile-random 从已设置过期时间的数据集中任意选择数据淘汰
4 allkeys-lru 从数据集中任意选择数据淘汰
5 allkeys-random 从数据集中任意选择数据淘汰
6 no-enviction 禁止驱逐数据

redis相比memcached有哪些优势？
(1) memcached所有的值均是简单的字符串，redis作为其替代者，支持更为丰富的数据类型
(2) redis的速度比memcached快很多
(3) redis可以持久化其数据



3. redis常见性能问题和解决方案：
(1) Master最好不要做任何持久化工作，如RDB内存快照和AOF日志文件
(2) 如果数据比较重要，某个Slave开启AOF备份数据，策略设置为每秒同步一次
(3) 为了主从复制的速度和连接的稳定性，Master和Slave最好在同一个局域网内
(4) 尽量避免在压力很大的主库上增加从库
(5) 主从复制不要用图状结构，用单向链表结构更为稳定，即：Master <- Slave1 <- Slave2 <- Slave3...
这样的结构方便解决单点故障问题，实现Slave对Master的替换。如果Master挂了，可以立刻启用Slave1做Master，其他不变。
